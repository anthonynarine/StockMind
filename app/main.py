from fastapi import FastAPI
from app.routes import portfolio, auth  # Custom route modules for portfolio and auth

"""
Main application entry point for the Dwight Assistant API.

This file:
- Instantiates the FastAPI app
- Registers modular API routes
- Defines the root health check endpoint

FastAPI automatically generates OpenAPI docs at:
- /docs     → Swagger UI
- /redoc    → ReDoc UI
"""

# ----------------------------------------
# 🚀 Create FastAPI app instance
# ----------------------------------------
app = FastAPI(
    title="Dwight Assistant",
    description="AI-powered assistant to manage and analyze your stock/crypto portfolio.",
    version="0.1.0"
)

# ----------------------------------------
# 🔐 Register Authentication Routes
#
# These routes are generated by fastapi-users:
# - POST   /auth/register     → create new user
# - POST   /auth/jwt/login    → log in and receive JWT
# - GET    /users/me          → get current user profile
# ----------------------------------------
app.include_router(auth.router)

# ----------------------------------------
# 📊 Register Portfolio Management Routes
#
# Your custom routes for managing holdings:
# - POST   /portfolio/        → add a new holding
# - GET    /portfolio/        → list all user holdings
# - PUT    /portfolio/{id}    → update a holding
# - DELETE /portfolio/{id}    → delete a holding
# All routes will be protected (require authentication).
# ----------------------------------------
app.include_router(portfolio.router, prefix="/portfolio", tags=["Portfolio"])

# ----------------------------------------
# ✅ Root Endpoint
#
# Health check or welcome route.
# Useful for testing if the API server is running.
#
# Returns:
#     dict: JSON with simple confirmation message.
# ----------------------------------------
@app.get("/", tags=["Root"])
def root():
    """
    Root endpoint to confirm the API is online.

    Returns:
        dict: A simple status message.
    """
    return {"message": "Dwight is running"}
